% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string.R
\name{cpp_paste}
\alias{cpp_paste}
\title{paste arguments into a string via \code{<<}}
\description{
This function lives in C++, it can recieve arbitrary number and types of arguments (so we can't provide an R interface)
}
\details{
We enable \code{std::boolalpha}.
}
\section{C++ code}{
\preformatted{# include <Rcpp.h>
// [[Rcpp::depends(Rcppzhuoer)]]
# include <Rcppzhuoer.h>
using namespace Rcpp;

int main() {
    std::string str = Rcppzhuoer::paste("hello ", 'h', "adle", 'y', " * ", 3.5);
    Rcout << str;  // "hello hadley * 3.5"
    
    Rcout << Rcppzhuoer::paste("a true: ", 1, ' ', true);  // "a true: 1 true"
}
}
}

\examples{
\dontrun{
# `std::string` in C++ can be converted to character scalar in R
Rcpp::evalCpp('Rcppzhuoer::paste("hello ", \\'h\\', "adle", \\'y\\', " * ", 3.5)', depends = 'Rcppzhuoer')
Rcpp::evalCpp('Rcppzhuoer::paste("a true: ", 1, \\' \\', true)', depends = 'Rcppzhuoer')
}


}
